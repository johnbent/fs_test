diff --git a/src/IOStore/Glib/GlibIOStore.cpp b/src/IOStore/Glib/GlibIOStore.cpp
index 0336851..ed58020 100644
--- a/src/IOStore/Glib/GlibIOStore.cpp
+++ b/src/IOStore/Glib/GlibIOStore.cpp
@@ -5,6 +5,15 @@
 #include "Util.h"
 #include <cstdlib>
 
+#include "mlog.h"
+#include "mlogfacs.h"
+
+#define GLIB_IO_ENTER(X) \
+    mlog(POSIXIO_INFO,"%s Entering %s: %s\n", __FILE__, __FUNCTION__, X);
+
+#define GLIB_IO_EXIT(X, Y) \
+    mlog(POSIXIO_INFO,"%s Exiting %s: %s - %lld\n", __FILE__, __FUNCTION__, X, (long long int)Y);
+
 /*
  * IOStore functions that return plfs_error_t should return PLFS_SUCCESS on success
  * and PLFS_E* on error.   The POSIX API uses 0 for success, -1 for failure
@@ -201,6 +210,22 @@ GlibIOSHandle::Size(off_t *ret_offset) {
 };
 
 plfs_error_t
+GlibIOSHandle::Writev(struct iovec *iov, int iovcnt, ssize_t *bytes_written) {
+  GLIB_IO_ENTER(this->path.c_str());
+  ssize_t rv = 0;
+  int i;
+  *bytes_written = 0;
+  for ( i = 0; i < iovcnt; i++ ) {
+    ssize_t bytes;
+    rv = Write(iov[i].iov_base, iov[i].iov_len, &bytes); 
+    if (rv < 0) break;
+    *bytes_written += bytes;
+  } 
+  GLIB_IO_EXIT(this->path.c_str(),rv);
+  return(get_err(rv));
+}
+
+plfs_error_t
 GlibIOSHandle::Write(const void* buf, size_t len, ssize_t *bytes_written) {
     ssize_t rv;
     rv = fwrite(buf,1,len,this->fp);
diff --git a/src/IOStore/Glib/GlibIOStore.h b/src/IOStore/Glib/GlibIOStore.h
index 3e60a94..5be0905 100644
--- a/src/IOStore/Glib/GlibIOStore.h
+++ b/src/IOStore/Glib/GlibIOStore.h
@@ -28,6 +28,7 @@ class GlibIOSHandle: public IOSHandle {
     plfs_error_t ReleaseDataBuf(void *buf, size_t length);
     plfs_error_t Size(off_t *ret_offset);
     plfs_error_t Write(const void* buf, size_t len, ssize_t *bytes_written);
+    plfs_error_t Writev(struct iovec *iov, int iovcnt, ssize_t *bytes_written);
     
  private:
     plfs_error_t Close();
diff --git a/src/LogicalFS/Container/Index/WriteFile.cpp b/src/LogicalFS/Container/Index/WriteFile.cpp
index c4118c3..94ef92a 100644
--- a/src/LogicalFS/Container/Index/WriteFile.cpp
+++ b/src/LogicalFS/Container/Index/WriteFile.cpp
@@ -529,7 +529,9 @@ WriteFile::writex(struct iovec *iov, int iovcnt, plfs_xvec *xvec, int xvcnt,
 	// write the data file
 	double begin, end;
 	begin = Util::getTime();
+        mlog(WF_DAPI, "Calling writev with %d vecs",xvcnt);
 	ret = wfh->Writev(iov, iovcnt, &written);
+        mlog(WF_DAPI, "Called writev with %d vecs: %d (%zd)",xvcnt,ret,written);
 	end = Util::getTime();
 	// then the index
 	if ( ret == PLFS_SUCCESS ) {
